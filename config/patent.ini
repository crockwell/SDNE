[Graph_Data]        
train_graph_file = GraphData/omitted1990-1997.txt

;uncomment this if you want to check link prediction
origin_graph_file = GraphData/train1990-1997.txt

;uncomment this if you want to check classification 
;label_file = GraphData/blogCatalog3-groups.txt

[Output]
;display the performance in every 2 epochs
display = 1
embedding_filename = patent

;the K for precision@k
check_reconstruction = 10,50,100

;uncomment this if you want to check link prediction
check_link_prediction = 10,50,100

;uncomment this if you want to check classification 
;check_classification = True

[Model_Setup]
;you can restore the model from an old one.
restore_model = ./result/patent/try1c/epoch0.model
start_epoch = 0
;start epoch is how many epochs were trained in pretrained model -- else is 0!

;the struct of the network, the -1 will be replaced with N automatically.
struct = -1,10,10

;the loss func is  // gamma * L1 + alpha * L2 + reg * regularTerm //
alpha = 100
gamma = 1
reg = 1

;the weight balanced value to reconstruct non-zero element more.
beta = 10
        
batch_size = 64
epochs_limit = 1
learning_rate = 0.01

dbn_init = True
dbn_epochs = 1
dbn_batch_size = 512
dbn_learning_rate = 0.1

;negative sample ratio 
;if you want to do negative sampling, you should load data from txt file instead of mat file.
ng_sample_ratio = 0.0

